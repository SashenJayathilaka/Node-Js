import { MongoClient } from "mongodb";

/**
 * @param {string} collectionName
 * @param {string} dbUrl
 * @param {string} where
 * @param {string} data
 * @param {any} update
 * @param {any} options
 */

export default class DataLake {
  dbName: string;
  collectionName: string;
  dbUrl: any;
  collection: any;
  db: any;
  constructor(collectionName: string, dbUrl: any) {
    this.dbName = "Base-Mongo";
    this.collectionName = collectionName;
    this.dbUrl = dbUrl;
  }

  async get(where: string) {
    await this.connect();
    return this.collection.findOne(where);
  }

  async create(data: string) {
    await this.connect();
    return this.collection.insertOne(data);
  }

  async update(where: string, update: any, options: any) {
    await this.connect();
    return this.collection.updateOne(where, update, options);
  }

  async delete(where: string) {
    await this.connect();
    return this.collection.deleteOne(where);
  }

  async connect() {
    const client = new MongoClient(this.dbUrl, {
      // @ts-ignore
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    await client.connect();

    this.db = client.db(this.dbName);
    this.collection = this.db.collection(this.collectionName);
  }
}
